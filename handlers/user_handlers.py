import html
from aiogram import F, types
from aiogram import Dispatcher
from aiogram.filters import CommandStart, Command
from filters.basefilters import IsAdmin
from functions import add_user, get_users_money 

dp = Dispatcher()


async def start_command(message: types.Message):
    kb = [
        [
            types.InlineKeyboardButton(
                text="–ù–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–æ–º", callback_data="start"
            )
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, <b>{html.escape(message.from_user.full_name)}</b>!\n–Ø –±–æ—Ç —É—á–µ—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Ç–≤–æ–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–µ–ª–∞—Ö üòä.",
        reply_markup=keyboard,
    )
    await add_user(
        message.from_user.id,
        message.from_user.full_name,
        message.from_user.username,
        0,
    )


async def profile(call: types.CallbackQuery):
    kb = [
        [
            types.InlineKeyboardButton(text="–î–æ—Ö–æ–¥", callback_data="givemoney"),
            types.InlineKeyboardButton(text="–†–∞—Å—Ö–æ–¥", callback_data="getmoney"),
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    money = await get_users_money(user_id=call.message.from_user.id)
    await call.message.answer(text=f'–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ. –í–∞—à –±–∞–ª–∞–Ω—Å: {money}', reply_markup=keyboard)


async def admin_command(message: types.Message):
    kb = [
        [
            types.InlineKeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistic"),
            types.InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞", callback_data="sendtoall"),
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å!", reply_markup=keyboard)


async def statistic_callback(callback: types.CallbackQuery):
    kb = [[types.InlineKeyboardButton(text="–í –º–µ–Ω—é", callback_data="menu")]]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    user_count = await get_user_count()
    await callback.message.edit_text(
        f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_count}", reply_markup=keyboard
    )


async def start_command2(callback: types.CallbackQuery):
    kb = [
        [
            types.InlineKeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistic"),
            types.InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞", callback_data="sendtoall"),
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    await callback.message.edit_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å!", reply_markup=keyboard
    )


def register_user_messages(dp: Dispatcher):
    dp.message.register(start_command, CommandStart())
    dp.callback_query.register(profile, F.data == 'start')
    dp.message.register(admin_command, Command("admin"), IsAdmin())
    dp.callback_query.register(statistic_callback, F.data == "statistic", IsAdmin())
    dp.callback_query.register(start_command2, F.data == "menu")
